const request = require('request')
const Command = require('./command.js')
const Debug = require('../debug.js')
const { RichEmbed } = require('discord.js')

const GelbooruBase = 'https://gelbooru.com/'
const Rule34Base = 'https://rule34.xxx/'

const GelbooruAPI = `${GelbooruBase}index.php?page=dapi&s=post&json=1&q=index`
const Rule34API = `${Rule34Base}index.php?page=dapi&s=post&json=1&q=index`

module.exports = class Flip extends Command
{
	setup(router)
	{
		// hentai flip
		// help hentai
		router.add(/^(help (hentai|rule34|r34))|((hentai|rule34|r34) help)$/i, (params, message) =>
		{
			if(!this.isNSFW(message))
			{
				message.channel.send(this.randomNotNSFW())
				return
			}
			message.channel.send('Hentai Help', new RichEmbed()
				.addField('[**NSFW**] `<hentai|rule34|r34> (count) (tag)`', 'Sends between 1 and 5 hentai images (*using search tag if given*)(*default is 1 image*)')
			)
		}, { nsfw: true }) // adminRequired, NSFW
		.add(/^(hentai|rule34|r34)( .*)?/i, (params, message) =>
		{
			if(!this.isNSFW(message))
			{
				message.channel.send(this.randomNotNSFW())
				return
			}
			let content = params[0].toLowerCase()
			if(content == 'r34') content = 'rule34'

			let url = content == 'hentai' ? GelbooruAPI : Rule34API, count = 1, tags = undefined
			if(params[1])
			{
				let split = params[1].substring(1).split(' ')
				if(!isNaN(split[0]))
				{
					count = parseInt(split[0])
					split.splice(0, 1)

					if(count < 1) count = 1
					else if(count > 5) count = 5
				}
				if(split && split.length > 0)
					tags = split.join('+')
			}
			if(tags)
				url += `&tags=${tags}`

			let r = request(url, (err, res, body) =>
			{
				if(err)
				{
					console.log(`Error getting '${url}' - ${err}`)
					return
				}
				if(!body)
				{
					message.channel.send(`No content found for tag(s) '${tags}'`)
					return
				}
				let posts = JSON.parse(body), imageURLs = []
				let msgContent = `${content[0].toUpperCase() + content.substring(1)} ${tags ? ('(' + tags.split('+').join(', ') + ')') : ''}`
				if(count > posts.length)
					count = posts.length
				for(let i = 0; i < count; i++)
				{
					let index = Math.floor(Math.random() * posts.length)
					let post = posts[index]
					posts.splice(index, 1)
					imageURLs.push(content == 'hentai' ? post.file_url : `${Rule34Base}images/${post.directory}/${post.image}`)
					msgContent += `\n - ${imageURLs[imageURLs.length - 1]}`
					console.log(`Sending ${content}[${i}][] ${imageURLs[imageURLs.length - 1]}`)
				}
				try
				{
					message.channel.send({ files: imageURLs }).catch((reason) =>
					{
						message.channel.send(`Error - ${reason}`)
						console.log(`Tried to send ${imageURLs.length} ${content} image${imageURLs.length == 1 ? '' : 's'} - ${reason}`)
					})
				}
				catch(e)
				{
					message.channel.send(`Error - [${e.name}] ${e.message}`)
					Debug.error(e, `Tried to send ${imageURLs.length} ${content} image${imageURLs.length == 1 ? '' : 's'}`)
				}
			})
		}, { nsfw: true }) // adminRequired, NSFW
	}
}
